name: Bang
sceneByURL:
  - action: scrapeXPath
    url:
      - bang.com/video
    scraper: sceneScraper
movieByURL:
  - action: scrapeXPath
    url:
      - bang.com/dvd
    scraper: movieScraper
performerByURL:
  - action: scrapeXPath
    url:
      - bang.com/pornstar
    scraper: performerScraper
xPathScrapers:
  sceneScraper:
    common:
      $movie: //p[contains(text(),"From the Movie:")]//a[contains(@href,"/dvd/")]
      $performer:  //p[@class="capitalize" and contains(text(),"With:")]/a[contains(@href,"/pornstar/")]
    scene:
      Title: //meta[@name="og:title"]/@content
      Details: //meta[@name="description"]/@content
      Image:
        selector: //meta[@name="og:image"]/@content
        postProcess:
          - replace:
              - regex: (.+)(\?.+)
                with: $1
      Date:
        selector: //div[@data-controller="login"]//p[contains(text(),"Date:")]/text()
        postProcess:
          - replace:
              - regex: \w+:\s*(\w+\s)(\d+),(\s\d{4}).*
                with: $1$2$3
          - parseDate: Jan 02 2006
      Tags:
        Name:
          selector: //div[@class="actions"]/a
      Performers:
        Name: 
          selector: $performer/@href
          postProcess: 
            - replace:
                - regex: ^/
                  with: "https://www.bang.com/"
            - subScraper:
                selector: //picture//img[contains(@alt,"profile")]/@alt
                postProcess:
                  - replace:
                      - regex: \b profile
                        with: ""
        URL:
          selector: $performer/@href
          postProcess: &addhost
            - replace:
                - regex: ^/
                  with: "https://www.bang.com/"
      Studio:
        Name:  //p[contains(text(),"Studio:")]//a[contains(@href,"from=")]
      Movies:
        Name: 
          selector: $movie/@href
          postProcess: 
            - replace:
                - regex: ^/
                  with: "https://www.bang.com/"
            - subScraper:
                selector: //meta[@name="og:title"]/@content
        URL:
          selector: $movie/@href
          postProcess: *addhost

  movieScraper:
    common:
      $details: //div[@data-controller="login"]
      $image: //div[contains(@class,"justify-start")]/div/img[contains(@src,"/front")]/@src
    movie:
      Name:
        selector: //meta[@name="og:title"]/@content
      Duration:
        selector: //div[@data-controller="login"]//p//span[contains(text(),":")]
        postProcess:
          - replace:
              - regex: ^(\d\d:\d\d)$
                with: "00:"
          - parseDate: 15:00:05
      Date:
        selector: $details//p[contains(text(), "Date:")]/span
        postProcess:
          - parseDate: Jan 02, 2006
      Synopsis: $details//p[contains(@class,"clear-both")]
      Studio:
        Name: $details//p[contains(text(),"Studio")]/a
      FrontImage:
        selector: $image
        postProcess:
          - replace:
              - regex: \?.*$
                with: ""
      BackImage:
        selector: $image
        postProcess:
          - replace:
              - regex: /front\.jpg?.*$
                with: "/back.jpg"
  performerScraper:
    common:
      $overlay: //div[@class="flex flex-col md:items-start items-center"]
    performer:
      Name: 
        selector: //picture//img[contains(@alt,"profile")]/@alt
        postProcess:
          - replace:
              - regex: \b profile
                with: ""
      URL:
        selector: //link[@rel="canonical"][1]/@href
      Twitter:
        selector: "//script[@type=\"application/ld+json\"][contains(.,'\"@type\": \"Person\"')][contains(.,'https://twitter.com/')]/text()"
        postProcess:
          - replace:
              - regex: .+https://twitter.com/([^"]+).+
                with: $1
      Birthdate:
        selector: $overlay//div[contains(text(),"Born")]/span[contains(text(),"old")]
        postProcess:
          - replace:
              - regex: \s*(\w+\s)(\d+),(\s\d{4}).*
                with: $1$2$3
          - parseDate: January 2 2006
      Country:
        selector: $overlay//div[contains(text(),"Born")]/text()[contains(.,"in")]/following-sibling::span[not(@class="mx-1")]
        postProcess:
          - replace:
              - regex: (?:.+\s)?(\w+)$
                with: $1
      HairColor:
        selector: $overlay//div[contains(@class,"md:text-left")]/text()[contains(.,"Hair Color")]/following-sibling::span[1]
      Ethnicity:
        selector: $overlay//div[contains(@class,"md:text-left")]/text()[contains(.,"Ethnicity")]/following-sibling::span[1]
      EyeColor:
        selector: $overlay//div[contains(@class,"md:text-left")]/text()[contains(.,"Eye Color")]/following-sibling::span[1]
      Aliases:
        selector: $overlay//h1/following-sibling::span
      Image:
        selector: //div[@class="relative"]/img/@src
        postProcess:
          - replace:
              - regex: \?.+$
                with: ""
# Last Updated November 10, 2022
